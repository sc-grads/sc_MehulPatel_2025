<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/6/2025 1:23:05 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-VL9R9CSO"
  DTS:CreatorName="LAPTOP-VL9R9CSO\MehulP"
  DTS:DTSID="{81209638-D547-485D-8A3B-3EE3452CBC28}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="7177"
  DTS:ObjectName="TimesheetFinalNoDuplicates"
  DTS:PackageType="5"
  DTS:VersionBuild="142"
  DTS:VersionGUID="{DA4CB9C9-8973-44D8-8A2D-3B11262FAA1D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{F23A3F45-9370-41C5-85A3-2E7B92F05667}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::FilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Timesheet\Mehul Patel\Mehul Patel _Timesheet_May_FINAL.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{ACE4CC36-3476-4AC3-B4C7-1474D523F29D}"
      DTS:ObjectName="LAPTOP-VL9R9CSO.TimesheetDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-VL9R9CSO;Initial Catalog=TimesheetDB;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Package9-{ACE4CC36-3476-4AC3-B4C7-1474D523F29D}LAPTOP-VL9R9CSO.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{DAFAD13E-2DAA-4751-A718-2F72CB035CA7}"
      DTS:ObjectName="LAPTOP-VL9R9CSO.TimesheetDB 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-VL9R9CSO;Initial Catalog=TimesheetDB;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Package9-{DAFAD13E-2DAA-4751-A718-2F72CB035CA7}LAPTOP-VL9R9CSO.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{166B6A4D-701E-4D43-83F0-200201EF791E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="RIGHT(&#xA;  LEFT(@[User::FilePath], LEN(@[User::FilePath]) - FINDSTRING(REVERSE(@[User::FilePath]), &quot;\\&quot;, 1)),&#xA;  FINDSTRING(REVERSE(LEFT(@[User::FilePath], LEN(@[User::FilePath]) - FINDSTRING(REVERSE(@[User::FilePath]), &quot;\\&quot;, 1))), &quot;\\&quot;, 1) - 1&#xA;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmployeeName">
      <DTS:VariableValue
        DTS:DataType="8">Mehul Patel</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{70DFB7C3-6A57-44FB-853C-6D550DB52980}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="RIGHT(@[User::FilePath], LEN(@[User::FilePath]) - FINDSTRING(@[User::FilePath], &quot;\\&quot;, LEN(@[User::FilePath]) - LEN(REPLACE(@[User::FilePath], &quot;\\&quot;, &quot;&quot;))))"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">Mehul Patel _Timesheet_May_FINAL.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60672AED-BC2D-4D21-8B04-A4D98A6B6B24}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Timesheet\Mehul Patel\Mehul Patel _Timesheet_May_FINAL.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{83EFAF8E-8690-45DF-AC90-7048B5F995D3}"
      DTS:EvaluateAsExpression="True"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NormalizedEmployeeName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{77A49343-368B-4FB1-A917-00223F75DB0F}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{52E57365-FEA2-4002-88FC-284F59F0A178}"
        DTS:ObjectName="{56771244-D6DB-41FF-82C1-B4D95AC083E3}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Timesheet" />
            <FEFEProperty
              FileSpec="*" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\MigrateTimesheet"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{9A81145B-1BEC-441E-AC6D-254AF1C9919B}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="MigrateTimesheet"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate"
                  componentClassID="Microsoft.Aggregate"
                  contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
                  name="Aggregate"
                  version="3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                      name="CountDistinctScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                      name="CountDistinctKeys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                      name="AutoExtendFactor">25</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Inputs[Aggregate Input 1]"
                      name="Aggregate Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Inputs[Aggregate Input 1].Columns[EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="EmployeeName"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Inputs[Aggregate Input 1].Columns[Type]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="Type"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Inputs[Aggregate Input 1].Columns[FileName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="FileName"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[FileName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Inputs[Aggregate Input 1].Columns[Month]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Month"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Month]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Inputs[Aggregate Input 1].Columns[Details]"
                          cachedDataType="wstr"
                          cachedLength="23"
                          cachedName="Details"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Details]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1]"
                      name="Aggregate Output 1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                          name="KeyScale"
                          typeConverter="KeyScaleType">0</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                          name="Keys" />
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[EmployeeName]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[EmployeeName]"
                          name="EmployeeName">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[Type]"
                          dataType="wstr"
                          length="9"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[Type]"
                          name="Type">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Type]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[FileName]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[FileName]"
                          name="FileName">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[FileName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[Month]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[Month]"
                          name="Month">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Month]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[Details]"
                          dataType="wstr"
                          length="23"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[Details]"
                          name="Details">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Details]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1"
                  componentClassID="Microsoft.Aggregate"
                  contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
                  name="Aggregate 1"
                  version="3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                      name="CountDistinctScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                      name="CountDistinctKeys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                      name="AutoExtendFactor">25</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Inputs[Aggregate Input 1]"
                      name="Aggregate Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Inputs[Aggregate Input 1].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Inputs[Aggregate Input 1].Columns[ErrorMessage]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="ErrorMessage"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Script Component.Outputs[Output 0].Columns[ErrorMessage]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Inputs[Aggregate Input 1].Columns[FilePath]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="FilePath"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[FilePath]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Outputs[Aggregate Output 1]"
                      name="Aggregate Output 1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                          name="KeyScale"
                          typeConverter="KeyScaleType">0</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                          name="Keys" />
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Outputs[Aggregate Output 1].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Outputs[Aggregate Output 1].Columns[ErrorCode]"
                          name="ErrorCode">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Outputs[Aggregate Output 1].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Outputs[Aggregate Output 1].Columns[ErrorMessage]"
                          name="ErrorMessage">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Foreach Loop Container\MigrateTimesheet\Script Component.Outputs[Output 0].Columns[ErrorMessage]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Outputs[Aggregate Output 1].Columns[FilePath]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Outputs[Aggregate Output 1].Columns[FilePath]"
                          name="FilePath">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[FilePath]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\ClientName"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="ClientName"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Client]) [refTable]
where [refTable].[ClientName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientName" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Inputs[Lookup Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ClientName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup Match Output].Columns[ClientName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="50"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup Match Output].Columns[ClientName]"
                          name="ClientName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ClientName</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup Match Output].Columns[ClientID]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup Match Output].Columns[ClientID]"
                          name="ClientID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ClientID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Description]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Comments]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]"
                          name="Copy of Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of D of Week]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of D of Week]"
                          name="Copy of D of Week"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client]"
                          name="Copy of Client"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client Project Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client Project Name]"
                          name="Copy of Client Project Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Description]"
                          name="Copy of Description"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Description]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Billable or Non Billable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Billable or Non Billable]"
                          name="Copy of Billable or Non Billable"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]"
                          name="Copy of Comments"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Comments]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]"
                          name="Copy of Start Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]"
                          name="Copy of End Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Inputs[Data Conversion Input].Columns[EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="EmployeeName"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Inputs[Data Conversion Input].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Inputs[Data Conversion Input].Columns[Copy of Start Time]"
                          cachedDataType="date"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Inputs[Data Conversion Input].Columns[Copy of End Time]"
                          cachedDataType="date"
                          cachedName="Copy of End Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of EmployeeName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of EmployeeName]"
                          name="Copy of EmployeeName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of Date]"
                          name="Copy of Copy of Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of Start Time]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of Start Time]"
                          name="Copy of Copy of Start Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of End Time]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of End Time]"
                          name="Copy of Copy of End Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Inputs[Derived Column Input].Columns[Copy of Start Time]"
                          cachedDataType="date"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Inputs[Derived Column Input].Columns[Copy of End Time]"
                          cachedDataType="date"
                          cachedName="Copy of End Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Inputs[Derived Column Input].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]"
                          name="Derived Total Hours"
                          precision="4"
                          scale="2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_NUMERIC,4,2)(([DATEDIFF]("ss",#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]},#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]}) / 3600.0))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_NUMERIC,4,2)((DATEDIFF("ss",[Copy of Start Time],[Copy of End Time]) / 3600.0))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          length="50"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[EmployeeName]"
                          name="EmployeeName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,50)@[User::EmployeeName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,50)@[User::EmployeeName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          length="9"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Type]"
                          name="Type"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Timesheet"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Timesheet"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          length="50"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          name="FileName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,50)@[User::FileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,50)@[User::FileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Month]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Month]"
                          name="Month"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,255)([MONTH](#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}) == 1 ? "January" : [MONTH](#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}) == 2 ? "February" : [MONTH](#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}) == 3 ? "March" : [MONTH](#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}) == 4 ? "April" : [MONTH](#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}) == 5 ? "May" : [MONTH](#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}) == 6 ? "June" : [MONTH](#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}) == 7 ? "July" : [MONTH](#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}) == 8 ? "August" : [MONTH](#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}) == 9 ? "September" : [MONTH](#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}) == 10 ? "October" : [MONTH](#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}) == 11 ? "November" : "December")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,255)(MONTH([Copy of Date]) == 1 ? "January" : MONTH([Copy of Date]) == 2 ? "February" : MONTH([Copy of Date]) == 3 ? "March" : MONTH([Copy of Date]) == 4 ? "April" : MONTH([Copy of Date]) == 5 ? "May" : MONTH([Copy of Date]) == 6 ? "June" : MONTH([Copy of Date]) == 7 ? "July" : MONTH([Copy of Date]) == 8 ? "August" : MONTH([Copy of Date]) == 9 ? "September" : MONTH([Copy of Date]) == 10 ? "October" : MONTH([Copy of Date]) == 11 ? "November" : "December")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Details]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          length="23"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Details]"
                          name="Details"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Migrated timesheet data"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Migrated timesheet data"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Path]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Path]"
                          name="Path"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,50)@[User::FilePath]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,50)@[User::FilePath]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="EmployeeName"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[EmployeeName]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[EmployeeName]) [refTable]
where [refTable].[FullName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="EmployeeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FullName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of EmployeeName]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Inputs[Lookup Input].Columns[Copy of EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Copy of EmployeeName"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of EmployeeName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">FullName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="RedirectRow"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Match Output].Columns[FullName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="100"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Match Output].Columns[FullName]"
                          name="FullName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">FullName</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Match Output].Columns[EmployeeID]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Match Output].Columns[EmployeeID]"
                          name="EmployeeID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">EmployeeID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">ExtractTimeSheet</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          name="D of Week"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          name="Client"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          name="Client Project Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          name="Comments"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          name="Total Hours"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          name="Start Time"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          name="End Time"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          dataType="date"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          dataType="wstr"
                          length="255"
                          name="D of Week" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          dataType="wstr"
                          length="255"
                          name="Client" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          name="Client Project Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          name="Billable or Non Billable" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          dataType="wstr"
                          length="255"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          dataType="date"
                          name="Total Hours" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          dataType="date"
                          name="Start Time" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          dataType="date"
                          name="End Time" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          name="D of Week" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          name="Client Project Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          name="Total Hours" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          name="End Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Timesheet]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Timesheet]) [refTable]
where [refTable].[Date] = ? and [refTable].[StartTime] = ? and [refTable].[EndTime] = ? and [refTable].[EmployeeID] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="TimesheetID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EmployeeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Date" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DofWeek" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientProjectName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Description" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsBillable" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Comments" dataType="DT_NTEXT" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StartTime" dataType="DT_WSTR" length="8" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EndTime" dataType="DT_WSTR" length="8" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="HoursWorked" dataType="DT_NUMERIC" length="0" precision="5" scale="2" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of Date]};#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of Start Time]};#{Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of End Time]};#{Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Match Output].Columns[EmployeeID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Inputs[Lookup Input].Columns[EmployeeID]"
                          cachedDataType="i4"
                          cachedName="EmployeeID"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Match Output].Columns[EmployeeID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">EmployeeID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Inputs[Lookup Input].Columns[Copy of Copy of Date]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Copy of Copy of Date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of Date]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Date</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Inputs[Lookup Input].Columns[Copy of Copy of Start Time]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Copy of Start Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of Start Time]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">StartTime</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Inputs[Lookup Input].Columns[Copy of Copy of End Time]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Copy of End Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of End Time]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">EndTime</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Multicast.Outputs[Multicast Output 2]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\Multicast 1"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast 1">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Multicast 1.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Multicast 1.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Multicast 1.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Multicast 1.Outputs[Multicast Output 3]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Timesheet]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Client Project Name"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientProjectName]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client Project Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Description"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Description]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Copy of Comments"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Billable or Non Billable"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsBillable]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Billable or Non Billable]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Derived Total Hours]"
                          cachedDataType="numeric"
                          cachedName="Derived Total Hours"
                          cachedPrecision="4"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HoursWorked]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeID]"
                          cachedDataType="i4"
                          cachedName="EmployeeID"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Match Output].Columns[EmployeeID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientID]"
                          cachedDataType="i4"
                          cachedName="ClientID"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup Match Output].Columns[ClientID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of D of Week"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DofWeek]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of D of Week]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Copy of Start Time]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Copy of Start Time"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of Start Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Copy of End Time]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Copy of End Time"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Copy of End Time]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          dataType="wstr"
                          length="10"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientProjectName]"
                          dataType="wstr"
                          length="100"
                          name="ClientProjectName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          dataType="nText"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          dataType="wstr"
                          length="8"
                          name="StartTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          dataType="wstr"
                          length="8"
                          name="EndTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          dataType="i4"
                          name="EmployeeID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TimesheetID]"
                          dataType="i4"
                          name="TimesheetID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsBillable]"
                          dataType="wstr"
                          length="255"
                          name="IsBillable" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HoursWorked]"
                          dataType="numeric"
                          name="HoursWorked"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DofWeek]"
                          dataType="wstr"
                          length="100"
                          name="DofWeek" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[AuditLog]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="EmployeeName"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeName]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[EmployeeName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Type]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="Type"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Type]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Month]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Month"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[Month]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Details]"
                          cachedDataType="wstr"
                          cachedLength="23"
                          cachedName="Details"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Details]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[Details]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[FileName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="FileName"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[NameOfFile]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1].Columns[FileName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[AuditID]"
                          dataType="i4"
                          name="AuditID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeName]"
                          dataType="wstr"
                          length="50"
                          name="EmployeeName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Type]"
                          dataType="wstr"
                          length="50"
                          name="Type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[NameOfFile]"
                          dataType="wstr"
                          length="100"
                          name="NameOfFile" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                          dataType="wstr"
                          length="50"
                          name="Month" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Details]"
                          dataType="wstr"
                          length="4000"
                          name="Details" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ActionTimestamp]"
                          dataType="dbTimeStamp"
                          name="ActionTimestamp" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 2"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorLog]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB 1]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-VL9R9CSO.TimesheetDB 1]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Outputs[Aggregate Output 1].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[ErrorMessage]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="ErrorMessage"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorMessage]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Outputs[Aggregate Output 1].Columns[ErrorMessage]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[FilePath]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="FilePath"
                          externalMetadataColumnId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[FilePath]"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Outputs[Aggregate Output 1].Columns[FilePath]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorID]"
                          dataType="i4"
                          name="ErrorID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[FilePath]"
                          dataType="wstr"
                          length="500"
                          name="FilePath" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorMessage]"
                          dataType="nText"
                          name="ErrorMessage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorTimestamp]"
                          dataType="dbTimeStamp"
                          name="ErrorTimestamp" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    
    
        /*
         * Add your code here
         */

        public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if (Row.ErrorCode != 0) // Check if an error occurred
        {
            string errorMessage = Row.ErrorCode.ToString() + " - " + ComponentMetaData.GetErrorDescription(Row.ErrorCode);
            Row.ErrorMessage = errorMessage;
        }
    }
}


]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ErrorMessage
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ErrorMessage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9dc16ef152af4df28318207ac7e2c4bf.Properties.Settings.get_Default():SC_9dc16ef152af4df28318207ac7e2c4bf.Properties.Sett" +
    "ings")]

namespace SC_9dc16ef152af4df28318207ac7e2c4bf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_9dc16ef152af4df28318207ac7e2c4bf.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{89685D4C-E8B3-4B51-83D2-F9C0C940235A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_9dc16ef152af4df28318207ac7e2c4bf</RootNamespace>
    <AssemblyName>SC_BACF3CC92BF54611A672C1626B4E6805</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_9dc16ef152af4df28318207ac7e2c4bf</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_9dc16ef152af4df28318207ac7e2c4bf</msb:DisplayName>
    <msb:ProjectId>{4F12A308-4539-4BAE-AD45-DD7E8FF24FA6}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_9dc16ef152af4df28318207ac7e2c4bf.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9dc16ef152af4df28318207ac7e2c4bf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_9dc16ef152af4df28318207ac7e2c4bf")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9dc16ef152af4df28318207ac7e2c4bf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9dc16ef152af4df28318207ac7e2c4bf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9dc16ef152af4df28318207ac7e2c4bf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9dc16ef152af4df28318207ac7e2c4bf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9dc16ef152af4df28318207ac7e2c4bf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_BACF3CC92BF54611A672C1626B4E6805.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFkcTGgAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAA3jIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIwyAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5BIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
MgAAAAAAAEgAAAACAAUA4CEAAPQPAAABAAAAAAAAANQxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQAOgAAAAEAABEDbwYAAAYs
MQNvBgAABgsSASgSAAAKcgEAAHACKBMAAAoDbwYAAAZvFAAACigVAAAKCgMGbwgAAAYqHgIoDAAA
BioqAgMEBSgWAAAKKlICexcAAAoCexgAAAoWlG8ZAAAKKiICFigaAAAKKiYCFwMoGwAACipaAywI
AhcoHAAACipyCQAAcHMdAAAKeh4CKB4AAAoqHgIoHwAACip+AiggAAAKAgJzEAAABn0BAAAEAgJz
EQAABn0CAAAEKpIEcqYAAHAabyEAAAosFQIFAgMoIgAACg4EcwUAAAZvDgAABipKKwcCA28PAAAG
A28KAAAGLfEqBio6AigjAAAKAgN9AwAABCo6AigjAAAKAgN9BAAABCoeAigjAAAKKq5+BQAABC0e
crYAAHDQBwAAAigkAAAKbyUAAApzJgAACoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAE
Kh4CKCcAAAoqLnMXAAAGgAcAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AACkBQAAI34AABAGAADgBgAAI1N0cmluZ3MAAAAA8AwAACgBAAAjVVMAGA4AABAAAAAjR1VJRAAA
ACgOAADMAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAIQAAAAgAAAAHAAAA
GAAAAA8AAAAnAAAAEAAAAAEAAAADAAAABwAAAAgAAAABAAAABQAAAAEAAAAAAEMDAQAAAAAABgA7
AhAFBgDPAhAFBgCHAf0EDwCEBQAABgC0AfEDBgAeAvEDBgD/AfEDBgC2AvEDBgBbAvEDBgB0AvED
BgDLAfEDBgDmAQoDCgCPAtQACgCmBNQADgCXBNQACgBOBNQACgBRBtQABgAUBqkDBgBqAf0EBgC3
BDAFBgBCBNwDEgA6AS0DEgCbAS0DEgAiAccDBgBPARAFBgAdAKkDFgABAMcEBgAmA6kDBgADBKkD
BgAxBKkDBgD1AKkDBgCmAKkDBgDWBvEDAAAAAEcAAAAAAAEAAQABABAAvAMAABAAAQABAAEAEACK
BAAAOQABAAUAAQAQADMGAABFAAEADAABABAAAQYAAEkAAwAQAAEAEADCBQAASQAEABEAAAAQADcF
kwVJAAUAEgAAARAA8QWTBWEABwAWAAYAAQaQAAYAwgWUAAEAQQaYAAEAQQaYABEAsAOcABEAEgGg
ABEAdwCkAFAgAAAAAMYA7QIGAAEAWCAAAAAAxgD4AgYAAQBgIAAAAADGALMGqAABAKYgAAAAAIYY
8AQGAAIAriAAAAAAhhjwBDUAAgC5IAAAAACGCIcArgAFAM4gAAAAAIYIawNXAAUA1yAAAAAAhgiV
ABAABQDhIAAAAACGCIADsgAGAPggAAAAAIYAygZXAAcAACEAAAAAhgAbBlcABwAIIQAAAACGGPAE
BgAHACghAAAAAMYApga3AAcATSEAAAAAxgGfBqgACwBgIQAAAADGAbMGqAAMAGIhAAAAAIYY8ATB
AA0AcSEAAAAAhhjwBMEADgCAIQAAAACDGPAEBgAPAIghAAAAAJMIswTHAA8AtCEAAAAAkwj6AMwA
DwC7IQAAAACTCAYB0QAPAMMhAAAAAJYIJwbXABAAyiEAAAAAhhjwBAYAEADSIQAAAACRGPYE3AAQ
AAAAAQDOBgAAAQCsBAAAAgDMBQAAAwBcBAAAAQAEAwAAAQAEAwAAAQBQAAAAAgDKAAAAAwCsBAAA
BABcBAAAAQCsBAAAAQDOBgAAAQBXBgAAAQBXBgAAAQAEAwkA8AQBABEA8AQGABkA8AQKACkA8AQQ
ADEA8AQQADkA8AQQAEEA8AQQAEkA8AQQAFEA8AQQAFkA8AQQAGEA8AQQAGkA8AQGAJkA8AQGALkA
8AQVAMkA8AQGAIkA7QIGAIkA+AIGANEAJAMgAIkAWAAkANkAHQQpAOEADQYuAHEA8AQ1AHEArAQ/
AHEAzAVDAHkAGgBHAHEAkQNMAHEAoANRAHEAmAMBAOkA8AQQAHEAygZXAHEAGwZXAIkA8AQGAOEA
+gVbAIkA4AViAJEA8AQGAPkAuABoAPkA0gZwAKEA8AR2AMEA8AQGAC4ACwD7AC4AEwAEAS4AGwAj
AS4AIwAsAS4AKwBVAS4AMwBVAS4AOwBbAS4AQwAsAS4ASwBjAS4AUwBVAS4AWwB8AUMAYwDGAakA
cwAjAckAcwAjAeEAewDGAeMAawDGARsAAwABAAcABQAIAAcAAACLAOAAAABvA+QAAACZAOgAAACE
A+QAAAC3BOwAAAAaAfEAAAArBvYAAgAGAAMAAgAHAAUAAQAIAAcAAQAJAAkAAgATAAsAAgAUAA0A
AQAVAA0AAgAWAA8ABIAAAAEAAAAAAAAAAAAAAAAAIwAAAAQAAAAAAAAAAAAAAH4AbgAAAAAAEAAA
AAAAAAAAAAAAhwBhBgAAAAAQAAAAAAAAAAAAAACHAH4GAAAAAAQAAAAAAAAAAAAAAH4AqQMAAAAA
EAAAAAAAAAAAAAAAhwBmBAAAAAAAAAAAAQAAAEEFAAAAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0
YTEwMABHZXRJbnQzMgBTQ19CQUNGM0NDOTJCRjU0NjExQTY3MkMxNjI2QjRFNjgwNQA8TW9kdWxl
PgBJbnB1dElEAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UA
Z2V0X0Vycm9yQ29kZQBzZXRfRXJyb3JNZXNzYWdlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBE
ZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB
dHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29t
cGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBv
c3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAFNDX0JBQ0YzQ0M5MkJGNTQ2MTFBNjcyQzE2MjZCNEU2ODA1LmRsbABn
ZXRfRXJyb3JDb2RlX0lzTnVsbABzZXRfRXJyb3JNZXNzYWdlX0lzTnVsbABTZXROdWxsAHNldF9J
dGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5
c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNl
cHRpb24AR2V0RXJyb3JEZXNjcmlwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91
dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFw
AElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFu
YWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAC5jdG9yAC5jY3Rv
cgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0
ZW0uUmVzb3VyY2VzAFNDXzlkYzE2ZWYxNTJhZjRkZjI4MzE4MjA3YWM3ZTJjNGJmLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ185ZGMxNmVmMTUyYWY0ZGYy
ODMxODIwN2FjN2UyYzRiZi5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVz
AEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAENvbmNhdABPYmpl
Y3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQA
U2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNx
bFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lu
cHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAAByAALQAgAAGAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwA5AGQAYwAxADYA
ZQBmADEANQAyAGEAZgA0AGQAZgAyADgAMwAxADgAMgAwADcAYQBjADcAZQAyAGMANABiAGYALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAPmlqGlYxYBIu32AnsR77MwA
BCABAQgDIAABBSABARERBCABAQ4FIAEBEVkEBwIOCAMgAA4EIAASbQQgAQ4IBgADDg4ODgkgAwES
PR0IEkEDBhI9AwYdCAQgAQgIBCABAggFIAIBCBwDIAACBiACAg4ReQUgAR0ICAcAARJ9EYCBBSAA
EoCFByACAQ4SgIUIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAFIAEB
EgwDIAAIBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAAAQMoAAgD
KAACAygADgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU0NfOWRjMTZlZjE1MmFmNGRmMjgzMTgyMDdhYzdlMmM0YmYAAAUB
AAAAAAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEA
AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAALQyAAAAAAAAAAAAAM4yAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA
MgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBDAF8AOQBkAGMAMQA2AGUAZgAxADUAMgBhAGYANABkAGYAMgA4ADMAMQA4ADIAMAA3
AGEAYwA3AGUAMgBjADQAYgBmAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBCAEEAQwBG
ADMAQwBDADkAMgBCAEYANQA0ADYAMQAxAEEANgA3ADIAQwAxADYAMgA2AEIANABFADYAOAAwADUA
LgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AEMAXwBCAEEAQwBGADMAQwBDADkAMgBCAEYANQA0ADYAMQAxAEEANgA3ADIAQwAxADYAMgA2AEIA
NABFADYAOAAwADUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBD
AF8AOQBkAGMAMQA2AGUAZgAxADUAMgBhAGYANABkAGYAMgA4ADMAMQA4ADIAMAA3AGEAYwA3AGUA
MgBjADQAYgBmAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAA
LgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA4DIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_bacf3cc92bf54611a672c1626b4e6805</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">47</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Script Component.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container\MigrateTimesheet\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Script Component.Outputs[Output 0].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Script Component.Outputs[Output 0].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\MigrateTimesheet\Union All"
                  componentClassID="Microsoft.UnionAll"
                  contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                  name="Union All"
                  version="1">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1]"
                      hasSideEffects="true"
                      name="Union All Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2]"
                      hasSideEffects="true"
                      name="Union All Input 2">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 3]"
                      hasSideEffects="true"
                      name="Union All Input 3">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 3].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 3].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4]"
                      hasSideEffects="true"
                      name="Union All Input 4">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 5]"
                      dangling="true"
                      hasSideEffects="true"
                      name="Union All Input 5">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1]"
                      name="Union All Output 1">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[D of Week]"
                          name="D of Week" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Client Project Name]"
                          name="Client Project Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours]"
                          name="Total Hours" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time]"
                          name="End Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorCode]"
                          name="ErrorCode" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]"
                          name="ErrorColumn" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[FilePath]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1].Columns[FilePath]"
                          name="FilePath" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Aggregate Output 1]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2.Inputs[OLE DB Destination Input]"
                  name="Aggregate Output 1"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Outputs[Aggregate Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Aggregate Output 11]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                  name="Aggregate Output 1"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Outputs[Aggregate Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Data Conversion Error Output]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 4]"
                  name="Data Conversion Error Output"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Inputs[Derived Column Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Data Conversion Output1]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Multicast 1.Inputs[Multicast Input 1]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Excel Source Error Output]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 1]"
                  name="Excel Source Error Output"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Lookup Match Output1]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\ClientName.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Multicast.Inputs[Multicast Input 1]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Multicast Output 1]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Multicast Output 1"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Multicast Output 11]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName.Inputs[Lookup Input]"
                  name="Multicast Output 1"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Multicast 1.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Multicast Output 2]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate.Inputs[Aggregate Input 1]"
                  name="Multicast Output 2"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Multicast 1.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[OLE DB Destination Error Output]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 3]"
                  name="OLE DB Destination Error Output"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[OLE DB Destination Error Output1]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Inputs[Union All Input 2]"
                  name="OLE DB Destination Error Output"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1.Inputs[Aggregate Input 1]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Script Component.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Loop Container\MigrateTimesheet.Paths[Union All Output 1]"
                  endId="Package\Foreach Loop Container\MigrateTimesheet\Script Component.Inputs[Input 0]"
                  name="Union All Output 1"
                  startId="Package\Foreach Loop Container\MigrateTimesheet\Union All.Outputs[Union All Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{86E81C76-2DDD-4874-B906-033892DB6C3B}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_cc2c1edf617a40f3aac4bd59c143271a"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FilePath">
              <ProjectItem
                Name="ST_cc2c1edf617a40f3aac4bd59c143271a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0B576EBB-CE6A-484C-84D5-D270C3BD41CC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_828e6bfa77ae4ab3811cfe27eee166c3</RootNamespace>
    <AssemblyName>ST_cc2c1edf617a40f3aac4bd59c143271a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_828e6bfa77ae4ab3811cfe27eee166c3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_828e6bfa77ae4ab3811cfe27eee166c3")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_828e6bfa77ae4ab3811cfe27eee166c3
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            MessageBox.Show(Dts.Variables["User::FilePath"].Value.ToString());

            
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_cc2c1edf617a40f3aac4bd59c143271a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_cc2c1edf617a40f3aac4bd59c143271a</msb:DisplayName>
    <msb:ProjectId>{3C1145A6-B611-4892-991B-A7ACBF0E55E9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_cc2c1edf617a40f3aac4bd59c143271a.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_828e6bfa77ae4ab3811cfe27eee166c3.Properties.Settings.get_Default():ST_828e6bfa77ae4ab3811cfe27eee166c3.Properties.Sett" +
    "ings")]

namespace ST_828e6bfa77ae4ab3811cfe27eee166c3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_828e6bfa77ae4ab3811cfe27eee166c3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_828e6bfa77ae4ab3811cfe27eee166c3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_828e6bfa77ae4ab3811cfe27eee166c3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_828e6bfa77ae4ab3811cfe27eee166c3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_828e6bfa77ae4ab3811cfe27eee166c3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_cc2c1edf617a40f3aac4bd59c143271a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAH3gRmgAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAABi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALQtAABPAAAAAEAAAIAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAADA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADo
LQAAAAAAAEgAAAACAAUA7CAAABAMAAABAAAAAAAAAPwsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMoCKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAKKBUA
AAomAigQAAAKFm8WAAAKKh4CKBcAAAoqHgIoGAAACiqufgEAAAQtHnIfAABw0AMAAAIoGQAACm8a
AAAKcxsAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigcAAAKKi5zCAAABoAD
AAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAANwDAAAjfgAASAQAALQF
AAAjU3RyaW5ncwAAAAD8CQAAlAAAACNVUwCQCgAAEAAAACNHVUlEAAAAoAoAAHABAAAjQmxvYgAA
AAAAAAACAAABVx2gAQkDAAAA+gEzABYAAAEAAAAfAAAABQAAAAYAAAAJAAAAAQAAABwAAAACAAAA
EAAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAJkDAQAAAAAABgBJAmkEBgDYAmkEBgCV
AVYEDwDdBAAABgDCARcEBgAsAhcEBgANAhcEBgC/AhcEBgBpAhcEBgCCAhcEBgDZARcEBgD0AQYD
CgCdAkgDCgAUAUgDBgDRA8oDBgB4AVYEBgBlBcoDBgA5BIkEBgApBAIEDgBIAYMDDgCpAYMDDgAw
Ae0DBgBdAWkECgBxA0gDEgAfBb8AEgCSAL8AFgCZBTIFFgB4BTIFBgDfAMoDBgCbAMoDBgCoBRcE
AAAAACUAAAAAAAEAAQABABAA4gMBADkAAQABAAAAEACQBOwERQABAAMAAAEQACkF7ARZAAMABwAD
AQAAVwUAAD0ABAAKABEA1gNoABEABAFsABEAggBwAAYGTQB0AFaARwV3AFaA5AB3AFAgAAAAAIYA
6AMGAAEAgyAAAAAAhhhJBAYAAQCLIAAAAACDGEkEBgABAJMgAAAAAJMINQR7AAEAvyAAAAAAkwjs
AIAAAQDGIAAAAACTCPgAhQABAM4gAAAAAJYIbAWLAAIA1SAAAAAAhhhJBAYAAgDdIAAAAACRGE8E
kAACAAAAAQAAAwkASQQBABEASQQGABkASQQKACkASQQQADEASQQQADkASQQQAEEASQQQAEkASQQQ
AFEASQQQAFkASQQQAGEASQQQAGkASQQGAIEASQQGAKkASQQVALkASQQGAHEATwUbAMEAGwUgAMkA
wQMlANEA9gIrAIkAIAMvANkAlAUzAMEAhQUBAHEASQQGAIkASQQGAOkArQA5AOkApAVAAJEASQRF
ALEASQQGAAgAFABeAAgAGABjACkAcwDLAC4ACwCjAC4AEwCsAC4AGwDLAC4AIwDUAC4AKwD9AC4A
MwD9AC4AOwADAS4AQwDUAC4ASwALAS4AUwD9AC4AWwAkAUMAYwBjAEkAcwDLAGEAewBjAGMAawBj
AAMAAQAEAAMAAAA5BJQAAAAMAZkAAABwBZ4AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEA
AABLJE5sAAAAAAAAVQAAAAQAAAAAAAAAAAAAAEwAeQAAAAAAEAAAAAAAAAAAAAAAVQApAwAAAAAE
AAAAAAAAAAAAAABMAMoDAAAAABAAAAAAAAAAAAAAAFUALgAAAAAABAAAAAAAAAAAAAAATAAyBQAA
AAAAAAAAAQAAAJoEAAAFAAIAAAAAU1RfODI4ZTZiZmE3N2FlNGFiMzgxMWNmZTI3ZWVlMTY2YzMA
PE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfY2MyYzFl
ZGY2MTdhNDBmM2FhYzRiZDU5YzE0MzI3MWEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291
cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVj
dE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9jYzJjMWVkZjYxN2E0MGYzYWFjNGJkNTlj
MTQzMjcxYS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlv
bgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlh
Z25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNUXzgyOGU2YmZhNzdhZTRhYjM4MTFjZmUyN2VlZTE2NmMzLlByb3BlcnRpZXMuUmVzb3VyY2Vz
LnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF84MjhlNmJmYTc3YWU0YWIzODExY2ZlMjdlZWUx
NjZjMy5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9y
bXMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZhdWx0AERpYWxv
Z1Jlc3VsdABzZXRfVGFza1Jlc3VsdABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AAAAAAAd
VQBzAGUAcgA6ADoARgBpAGwAZQBQAGEAdABoAABxUwBUAF8AOAAyADgAZQA2AGIAZgBhADcANwBh
AGUANABhAGIAMwA4ADEAMQBjAGYAZQAyADcAZQBlAGUAMQA2ADYAYwAzAC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAB3NJ8WcKmcTIxo/x8wiWe6AAQgAQEIAyAA
AQUgAQEREQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJpHAMgABwDIAAOBQABEXEOBgABEnUReQQg
ABJ9BiACAQ4SfQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMGEhACBggDBhEU
BAAAEkkEAAASTQUAAQESTQQAABIQAwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfODI4ZTZiZmE3N2FlNGFiMzgx
MWNmZTI3ZWVlMTY2YzMAAAUBAAAAAAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjUAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC43AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3Vy
Y2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNv
dXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA3C0AAAAAAAAAAAAA9i0AAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAOgtAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAACIEAAAAAAAAAAAAACIENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBObEskAAABAE5sSyQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsASCAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABeAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkA
bwBuAAAAAABTAFQAXwA4ADIAOABlADYAYgBmAGEANwA3AGEAZQA0AGEAYgAzADgAMQAxAGMAZgBl
ADIANwBlAGUAZQAxADYANgBjADMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEA
LgAwAC4AOQAyADkAMQAuADIANwA3ADIANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAFQAXwBjAGMAMgBjADEAZQBkAGYANgAxADcAYQA0ADAAZgAzAGEAYQBjADQAYgBkADUA
OQBjADEANAAzADIANwAxAGEALgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn
AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADUAAAAqAAEAAQBMAGUA
ZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABG
AGkAbABlAG4AYQBtAGUAAABTAFQAXwBjAGMAMgBjADEAZQBkAGYANgAxADcAYQA0ADAAZgAzAGEA
YQBjADQAYgBkADUAOQBjADEANAAzADIANwAxAGEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBj
AHQATgBhAG0AZQAAAAAAUwBUAF8AOAAyADgAZQA2AGIAZgBhADcANwBhAGUANABhAGIAMwA4ADEA
MQBjAGYAZQAyADcAZQBlAGUAMQA2ADYAYwAzAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA5ADIAOQAxAC4AMgA3ADcAMgA2AAAAAABGAA8AAQBBAHMAcwBlAG0A
YgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA5ADIAOQAxAC4AMgA3ADcAMgA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAIPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{B0958896-EAE2-4609-A63F-B65620EC879B}"
          DTS:ObjectName="{B0958896-EAE2-4609-A63F-B65620EC879B}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet"
          TopLeft="44.3666377542759,118.999998137752" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container\Script Task"
          TopLeft="46.866637617682,21.933332146075" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="263.2,285.6"
          Size="263.2,328.8"
          Id="Package\Foreach Loop Container"
          TopLeft="140.833328916795,125.100002585451" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\MigrateTimesheet">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="119.2,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\Multicast"
          TopLeft="596.428538841153,471.714282537358" />
        <NodeLayout
          Size="132.8,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\ClientName"
          TopLeft="610.14877618675,279.561902817867" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion 1"
          TopLeft="335.83331498421,140.02857045483" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\Script Component"
          TopLeft="40.5083427469349,176.433332064715" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\Data Conversion"
          TopLeft="718.124960763381,13.3714284784456" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\Excel Source"
          TopLeft="298.74998367702,10.6833332173196" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 2"
          TopLeft="52.1154849698915,370.671426028595" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination"
          TopLeft="336.874981593962,485.983329953865" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\Derived Column"
          TopLeft="861.041619621427,135.849999055316" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\Lookup"
          TopLeft="578.571396959681,380.095235555418" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1"
          TopLeft="794.494004209808,459.488092042872" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName"
          TopLeft="417.708310510757,340.16666430119" />
        <NodeLayout
          Size="135.2,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\Aggregate 1"
          TopLeft="74.8833408687679,249.016664893313" />
        <NodeLayout
          Size="120,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\Union All"
          TopLeft="107.175005771096,63.7666661815181" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\Aggregate"
          TopLeft="837.291620919069,294.016664622112" />
        <NodeLayout
          Size="128,41.6"
          Id="Package\Foreach Loop Container\MigrateTimesheet\Multicast 1"
          TopLeft="441.666642535065,209.047617816452" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[OLE DB Destination Error Output1]"
          TopLeft="422.474981593962,485.983329953865">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-236.633309156199,-380.616663772347"
              Start="0,0"
              End="-236.633309156199,-373.116663772347">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-221.365129865205" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-221.365129865205"
                    Point2="0,-225.365129865205"
                    Point3="-4,-225.365129865205" />
                  <mssgle:LineSegment
                    End="-232.633309156199,-225.365129865205" />
                  <mssgle:CubicBezierSegment
                    Point1="-232.633309156199,-225.365129865205"
                    Point2="-236.633309156199,-225.365129865205"
                    Point3="-236.633309156199,-229.365129865205" />
                  <mssgle:LineSegment
                    End="-236.633309156199,-373.116663772347" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-191.5255608281,-220.365129865205,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[OLE DB Destination Error Output]"
          TopLeft="855.827337543141,459.488092042872">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-660.652331772046,-354.121425861354"
              Start="0,0"
              End="-660.652331772046,-346.621425861354">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-194.653482800272" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-194.653482800272"
                    Point2="0,-198.653482800272"
                    Point3="-4,-198.653482800272" />
                  <mssgle:LineSegment
                    End="-656.652331772046,-198.653482800272" />
                  <mssgle:CubicBezierSegment
                    Point1="-656.652331772046,-198.653482800272"
                    Point2="-660.652331772046,-198.653482800272"
                    Point3="-660.652331772046,-202.653482800272" />
                  <mssgle:LineSegment
                    End="-660.652331772046,-346.621425861354" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-403.535072136023,-193.653482800272,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Multicast Output 2]"
          TopLeft="525.666642535065,250.647617816452">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="374.824978384004,43.36904680566"
              Start="0,0"
              End="374.824978384004,35.86904680566">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.6688709208244" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.6688709208244"
                    Point2="0,17.6688709208244"
                    Point3="4,17.6688709208244" />
                  <mssgle:LineSegment
                    End="370.824978384004,17.6688709208244" />
                  <mssgle:CubicBezierSegment
                    Point1="370.824978384004,17.6688709208244"
                    Point2="374.824978384004,17.6688709208244"
                    Point3="374.824978384004,21.6688709208244" />
                  <mssgle:LineSegment
                    End="374.824978384004,35.86904680566" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Multicast Output 11]"
          TopLeft="505.666642535065,250.647617816452">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5583320243081,89.519046484738"
              Start="0,0"
              End="-11.5583320243081,82.019046484738">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.759523242369" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.759523242369"
                    Point2="0,44.759523242369"
                    Point3="-4,44.759523242369" />
                  <mssgle:LineSegment
                    End="-7.55833202430807,44.759523242369" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.55833202430807,44.759523242369"
                    Point2="-11.5583320243081,44.759523242369"
                    Point3="-11.5583320243081,48.759523242369" />
                  <mssgle:LineSegment
                    End="-11.5583320243081,82.019046484738" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Multicast Output 1]"
          TopLeft="596.428538841153,492.514282537358">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-88.3535572471912,14.269047416507"
              Start="0,0"
              End="-80.8535572471912,14.269047416507">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-40.1767786235956,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-40.1767786235956,0"
                    Point2="-44.1767786235956,0"
                    Point3="-44.1767786235956,4" />
                  <mssgle:LineSegment
                    End="-44.1767786235956,10.269047416507" />
                  <mssgle:CubicBezierSegment
                    Point1="-44.1767786235956,10.269047416507"
                    Point2="-44.1767786235956,14.269047416507"
                    Point3="-48.1767786235956,14.269047416507" />
                  <mssgle:LineSegment
                    End="-80.8535572471912,14.269047416507" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Lookup No Match Output]"
          TopLeft="636.23330123375,421.695235555418">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.0190469819399"
              Start="0,0"
              End="0,42.5190469819399">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5190469819399" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,15.45483599097,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Lookup Match Output1]"
          TopLeft="676.54877618675,321.161902817867">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-41.5773792270689,58.933332737551"
              Start="0,0"
              End="-41.5773792270689,51.433332737551">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.4666663687755" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.4666663687755"
                    Point2="0,29.4666663687755"
                    Point3="-4,29.4666663687755" />
                  <mssgle:LineSegment
                    End="-37.5773792270689,29.4666663687755" />
                  <mssgle:CubicBezierSegment
                    Point1="-37.5773792270689,29.4666663687755"
                    Point2="-41.5773792270689,29.4666663687755"
                    Point3="-41.5773792270689,33.4666663687755" />
                  <mssgle:LineSegment
                    End="-41.5773792270689,51.433332737551" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-68.9800763322845,34.4666663687755,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Lookup Match Output]"
          TopLeft="570.508310510757,360.96666430119">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.640465675993,-60.6047614833234"
              Start="0,0"
              End="32.140465675993,-60.6047614833234">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="15.8202328379965,0" />
                  <mssgle:CubicBezierSegment
                    Point1="15.8202328379965,0"
                    Point2="19.8202328379965,0"
                    Point3="19.8202328379965,-4" />
                  <mssgle:LineSegment
                    End="19.8202328379965,-56.6047614833234" />
                  <mssgle:CubicBezierSegment
                    Point1="19.8202328379965,-56.6047614833234"
                    Point2="19.8202328379965,-60.6047614833234"
                    Point3="23.8202328379965,-60.6047614833234" />
                  <mssgle:LineSegment
                    End="32.140465675993,-60.6047614833234" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-28.3711538807535,1,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Excel Source Output]"
          TopLeft="438.74998367702,32.8273808478826">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="279.374977086361,0"
              Start="0,0"
              End="271.874977086361,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="271.874977086361,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Excel Source Error Output]"
          TopLeft="298.74998367702,31.4833332173196">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-71.5749779059242,53.0833329641985"
              Start="0,0"
              End="-64.0749779059242,53.0833329641985">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-31.7874889529621,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-31.7874889529621,0"
                    Point2="-35.7874889529621,0"
                    Point3="-35.7874889529621,4" />
                  <mssgle:LineSegment
                    End="-35.7874889529621,49.0833329641985" />
                  <mssgle:CubicBezierSegment
                    Point1="-35.7874889529621,49.0833329641985"
                    Point2="-35.7874889529621,53.0833329641985"
                    Point3="-39.7874889529621,53.0833329641985" />
                  <mssgle:LineSegment
                    End="-64.0749779059242,53.0833329641985" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-93.6388756717121,-17.609375,115.7027734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Derived Column Output]"
          TopLeft="861.041619621427,158.739284755073">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-361.208304637217,0"
              Start="0,0"
              End="-353.708304637217,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-353.708304637217,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Data Conversion Output1]"
          TopLeft="417.83331498421,181.62857045483">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="87.833327550855,27.419047361622"
              Start="0,0"
              End="87.833327550855,19.919047361622">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.70952368081102" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.70952368081102"
                    Point2="0,13.709523680811"
                    Point3="4,13.709523680811" />
                  <mssgle:LineSegment
                    End="83.833327550855,13.709523680811" />
                  <mssgle:CubicBezierSegment
                    Point1="83.833327550855,13.709523680811"
                    Point2="87.833327550855,13.709523680811"
                    Point3="87.833327550855,17.709523680811" />
                  <mssgle:LineSegment
                    End="87.833327550855,19.919047361622" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Data Conversion Output]"
          TopLeft="796.124960763381,54.9714284784456">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="141.316658858046,80.8785705768704"
              Start="0,0"
              End="141.316658858046,73.3785705768704">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.4392852884352" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.4392852884352"
                    Point2="0,40.4392852884352"
                    Point3="4,40.4392852884352" />
                  <mssgle:LineSegment
                    End="137.316658858046,40.4392852884352" />
                  <mssgle:CubicBezierSegment
                    Point1="137.316658858046,40.4392852884352"
                    Point2="141.316658858046,40.4392852884352"
                    Point3="141.316658858046,44.4392852884352" />
                  <mssgle:LineSegment
                    End="141.316658858046,73.3785705768704" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Data Conversion Error Output]"
          TopLeft="718.124960763381,39.7714284784456">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-490.949954992285,50.3952377030725"
              Start="0,0"
              End="-483.449954992285,50.3952377030725">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-241.474977496143,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-241.474977496143,0"
                    Point2="-245.474977496143,0"
                    Point3="-245.474977496143,4" />
                  <mssgle:LineSegment
                    End="-245.474977496143,46.3952377030725" />
                  <mssgle:CubicBezierSegment
                    Point1="-245.474977496143,46.3952377030725"
                    Point2="-245.474977496143,50.3952377030725"
                    Point3="-249.474977496143,50.3952377030725" />
                  <mssgle:LineSegment
                    End="-483.449954992285,50.3952377030725" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-311.561364214892,-17.43359375,132.1727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Aggregate Output 11]"
          TopLeft="916.692812564439,335.616664622112">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,123.87142742076"
              Start="0,0"
              End="0,116.37142742076">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,116.37142742076" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Aggregate Output 1]"
          TopLeft="142.29941291933,290.616664893313">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,80.0547611352824"
              Start="0,0"
              End="0,72.5547611352824">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,72.5547611352824" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Union All Output 1]"
          TopLeft="133.575005771096,105.366666181518">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12.2666630241608,71.0666658831969"
              Start="0,0"
              End="-12.2666630241608,63.5666658831969">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.7148145754213" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.7148145754213"
                    Point2="0,21.7148145754213"
                    Point3="-4,21.7148145754213" />
                  <mssgle:LineSegment
                    End="-8.26666302416083,21.7148145754213" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.26666302416083,21.7148145754213"
                    Point2="-12.2666630241608,21.7148145754213"
                    Point3="-12.2666630241608,25.7148145754213" />
                  <mssgle:LineSegment
                    End="-12.2666630241608,63.5666658831969" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\MigrateTimesheet.Paths[Output 0]"
          TopLeft="121.308342746935,218.033332064715">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21.1749981218329,30.9833328285978"
              Start="0,0"
              End="21.1749981218329,23.4833328285978">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.4916664142989" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.4916664142989"
                    Point2="0,15.4916664142989"
                    Point3="4,15.4916664142989" />
                  <mssgle:LineSegment
                    End="17.1749981218329,15.4916664142989" />
                  <mssgle:CubicBezierSegment
                    Point1="17.1749981218329,15.4916664142989"
                    Point2="21.1749981218329,15.4916664142989"
                    Point3="21.1749981218329,19.4916664142989" />
                  <mssgle:LineSegment
                    End="21.1749981218329,23.4833328285978" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\MigrateTimesheet\ClientName">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Client]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\MigrateTimesheet\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\MigrateTimesheet\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Timesheet]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\MigrateTimesheet\OLE DB Destination 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\MigrateTimesheet\EmployeeName">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[EmployeeName]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>